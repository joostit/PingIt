# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

steps:

- task: Cache@2
  displayName: 'Restore Maven dependency cache'
  inputs:
    key: 'maven | "$(Agent.OS)" | **/pom.xml'
    restoreKeys: |
      maven | "$(Agent.OS)"
      maven
    path: $(MAVEN_CACHE_FOLDER)

- task: JavaToolInstaller@0
  displayName: 'Install JDK'
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- task: NodeTool@0
  displayName: 'Install Node'
  inputs:
    versionSource: 'spec'
    versionSpec: '6.x'
    checkLatest: true

- task: Maven@3
  displayName: 'Run Maven Clean Package'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
    javaHomeOption: 'JDKVersion'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
#    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'clean package'

- task: CopyFiles@2
  displayName: 'Copy Build result Artifact staging directory'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)/target'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'


# Archives all files in the build system for problem solving
#- task: ArchiveFiles@2
#  displayName: 'Archiving all the files in the build system for debugging'
#  inputs:
#    rootFolderOrFile: '$(system.defaultworkingdirectory)/..'
#    includeRootFolder: true
#    archiveType: 'zip'
#    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish JAR Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    